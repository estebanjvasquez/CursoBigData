{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"12BMdDkNMP2xv4BeGqvMsQM6BqUzZVMe-","timestamp":1677166786918},{"file_id":"1tCSolKyvsiyyiQgdNy2pBi_sCQ6hJV3c","timestamp":1675241236989},{"file_id":"1JI5JAGr5J03ODR67JM7ce379VzpM6Um2","timestamp":1674645851085},{"file_id":"1dexJd5kaPlcSRKZ33F14dovVo79n8EjQ","timestamp":1671627140029},{"file_id":"1YcEyxJsOZdfXeIcJpnn-1CyFneKDohh8","timestamp":1671011779517},{"file_id":"1wQ5eq2kd5TLkFDY3fABMSHECM-DHFGcs","timestamp":1667464622287},{"file_id":"14NpHO2uWpd3ZhukD9mFAmJQ4FJzH7Giw","timestamp":1645097446108}],"collapsed_sections":["wQzMXlOAHfFK","57Ftd7YNutQd","qcqMS5Dvurpi","u5kMwQL8GuHy"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## traigo las *librerias*\n","\n","\n","\n","---\n"],"metadata":{"id":"ThcMbwBm_ohV"}},{"cell_type":"markdown","source":["##definimos dataframe, subido a mano\n","\n","\n","Si ejecuto esta celda y no he subido el archivo, obtendremos el siguiente error:\n","```\n","FileNotFoundError: [Errno 2] No such file or directory: '/content/chipotle.tsv'\n","```\n","\n"],"metadata":{"id":"ICUD_wVgY2I5"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"MknP3dKQ2HNY"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# import seaborn as sns\n","import plotly as ply"]},{"cell_type":"code","source":["chipo = pd.read_csv('/content/chipotle.tsv', sep = '\\t') # "],"metadata":{"id":"ZdoJ8rdN4pgf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(type(chipo))\n","print(type('hola'))"],"metadata":{"id":"tH-hZQ9OOaYu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(chipo)"],"metadata":{"id":"lwxGuvEReAnv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["display(chipo)"],"metadata":{"id":"gZDXKmEkeIt2","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1677169550294,"user_tz":-60,"elapsed":256,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"1050cd07-7c96-48b1-dd4c-2c4b61bd8cf7"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["      order_id  quantity                              item_name  \\\n","0            1         1           Chips and Fresh Tomato Salsa   \n","1            1         1                                   Izze   \n","2            1         1                       Nantucket Nectar   \n","3            1         1  Chips and Tomatillo-Green Chili Salsa   \n","4            2         2                           Chicken Bowl   \n","...        ...       ...                                    ...   \n","4617      1833         1                          Steak Burrito   \n","4618      1833         1                          Steak Burrito   \n","4619      1834         1                     Chicken Salad Bowl   \n","4620      1834         1                     Chicken Salad Bowl   \n","4621      1834         1                     Chicken Salad Bowl   \n","\n","                                     choice_description item_price  \n","0                                                   NaN     $2.39   \n","1                                          [Clementine]     $3.39   \n","2                                               [Apple]     $3.39   \n","3                                                   NaN     $2.39   \n","4     [Tomatillo-Red Chili Salsa (Hot), [Black Beans...    $16.98   \n","...                                                 ...        ...  \n","4617  [Fresh Tomato Salsa, [Rice, Black Beans, Sour ...    $11.75   \n","4618  [Fresh Tomato Salsa, [Rice, Sour Cream, Cheese...    $11.75   \n","4619  [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...    $11.25   \n","4620  [Fresh Tomato Salsa, [Fajita Vegetables, Lettu...     $8.75   \n","4621  [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...     $8.75   \n","\n","[4622 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-c789f7f1-905d-40dc-931b-80e8d23f9607\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>quantity</th>\n","      <th>item_name</th>\n","      <th>choice_description</th>\n","      <th>item_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Chips and Fresh Tomato Salsa</td>\n","      <td>NaN</td>\n","      <td>$2.39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Izze</td>\n","      <td>[Clementine]</td>\n","      <td>$3.39</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Nantucket Nectar</td>\n","      <td>[Apple]</td>\n","      <td>$3.39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Chips and Tomatillo-Green Chili Salsa</td>\n","      <td>NaN</td>\n","      <td>$2.39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Chicken Bowl</td>\n","      <td>[Tomatillo-Red Chili Salsa (Hot), [Black Beans...</td>\n","      <td>$16.98</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4617</th>\n","      <td>1833</td>\n","      <td>1</td>\n","      <td>Steak Burrito</td>\n","      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Sour ...</td>\n","      <td>$11.75</td>\n","    </tr>\n","    <tr>\n","      <th>4618</th>\n","      <td>1833</td>\n","      <td>1</td>\n","      <td>Steak Burrito</td>\n","      <td>[Fresh Tomato Salsa, [Rice, Sour Cream, Cheese...</td>\n","      <td>$11.75</td>\n","    </tr>\n","    <tr>\n","      <th>4619</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Pinto...</td>\n","      <td>$11.25</td>\n","    </tr>\n","    <tr>\n","      <th>4620</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Lettu...</td>\n","      <td>$8.75</td>\n","    </tr>\n","    <tr>\n","      <th>4621</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Pinto...</td>\n","      <td>$8.75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4622 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c789f7f1-905d-40dc-931b-80e8d23f9607')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c789f7f1-905d-40dc-931b-80e8d23f9607 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c789f7f1-905d-40dc-931b-80e8d23f9607');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"markdown","source":["## Y si quiero traerlo desde Drive?"],"metadata":{"id":"a7ydIqnQG4WG"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"cyV_Bo9JrQkp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo = pd.read_csv('/content/chipotle.tsv', sep = '\\c')"],"metadata":{"id":"Z_40xp-nEmWs","colab":{"base_uri":"https://localhost:8080/","height":165},"executionInfo":{"status":"error","timestamp":1677168487517,"user_tz":-60,"elapsed":334,"user":{"displayName":"Agustin Ferreira Vidal","userId":"08567477542115378931"}},"outputId":"24744782-c800-47c1-ee7c-93548945d456"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-a84cc4176876>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mchipo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'https://www.kaggle.com/datasets/thedevastator/domestic-food-prices-after-covid-19/download?datasetVersionNumber=2'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msep\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'\\c'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"markdown","source":["Â¿QuÃ© resultado obtenemos de la funciÃ³n read_csv de Pandas?"],"metadata":{"id":"a5OmmUzfv7Io"}},{"cell_type":"code","source":["print(type(chipo))"],"metadata":{"id":"g_T-G6U9sq9N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["display(chipo)"],"metadata":{"id":"kLa-OFz7yL7r","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1677170268718,"user_tz":-60,"elapsed":3,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"8f7ef557-7440-4fa7-b711-61aef0005ecb"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["      order_id  quantity                              item_name  \\\n","0            1         1           Chips and Fresh Tomato Salsa   \n","1            1         1                                   Izze   \n","2            1         1                       Nantucket Nectar   \n","3            1         1  Chips and Tomatillo-Green Chili Salsa   \n","4            2         2                           Chicken Bowl   \n","...        ...       ...                                    ...   \n","4617      1833         1                          Steak Burrito   \n","4618      1833         1                          Steak Burrito   \n","4619      1834         1                     Chicken Salad Bowl   \n","4620      1834         1                     Chicken Salad Bowl   \n","4621      1834         1                     Chicken Salad Bowl   \n","\n","                                     choice_description item_price  \n","0                                                   NaN     $2.39   \n","1                                          [Clementine]     $3.39   \n","2                                               [Apple]     $3.39   \n","3                                                   NaN     $2.39   \n","4     [Tomatillo-Red Chili Salsa (Hot), [Black Beans...    $16.98   \n","...                                                 ...        ...  \n","4617  [Fresh Tomato Salsa, [Rice, Black Beans, Sour ...    $11.75   \n","4618  [Fresh Tomato Salsa, [Rice, Sour Cream, Cheese...    $11.75   \n","4619  [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...    $11.25   \n","4620  [Fresh Tomato Salsa, [Fajita Vegetables, Lettu...     $8.75   \n","4621  [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...     $8.75   \n","\n","[4622 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-0a90c507-9ca2-4bec-a156-45c7fe8cf334\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>quantity</th>\n","      <th>item_name</th>\n","      <th>choice_description</th>\n","      <th>item_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Chips and Fresh Tomato Salsa</td>\n","      <td>NaN</td>\n","      <td>$2.39</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Izze</td>\n","      <td>[Clementine]</td>\n","      <td>$3.39</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Nantucket Nectar</td>\n","      <td>[Apple]</td>\n","      <td>$3.39</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Chips and Tomatillo-Green Chili Salsa</td>\n","      <td>NaN</td>\n","      <td>$2.39</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Chicken Bowl</td>\n","      <td>[Tomatillo-Red Chili Salsa (Hot), [Black Beans...</td>\n","      <td>$16.98</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4617</th>\n","      <td>1833</td>\n","      <td>1</td>\n","      <td>Steak Burrito</td>\n","      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Sour ...</td>\n","      <td>$11.75</td>\n","    </tr>\n","    <tr>\n","      <th>4618</th>\n","      <td>1833</td>\n","      <td>1</td>\n","      <td>Steak Burrito</td>\n","      <td>[Fresh Tomato Salsa, [Rice, Sour Cream, Cheese...</td>\n","      <td>$11.75</td>\n","    </tr>\n","    <tr>\n","      <th>4619</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Pinto...</td>\n","      <td>$11.25</td>\n","    </tr>\n","    <tr>\n","      <th>4620</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Lettu...</td>\n","      <td>$8.75</td>\n","    </tr>\n","    <tr>\n","      <th>4621</th>\n","      <td>1834</td>\n","      <td>1</td>\n","      <td>Chicken Salad Bowl</td>\n","      <td>[Fresh Tomato Salsa, [Fajita Vegetables, Pinto...</td>\n","      <td>$8.75</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4622 rows Ã— 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a90c507-9ca2-4bec-a156-45c7fe8cf334')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0a90c507-9ca2-4bec-a156-45c7fe8cf334 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0a90c507-9ca2-4bec-a156-45c7fe8cf334');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"markdown","source":["## Primer vistazo a los datos:"],"metadata":{"id":"cYkXM7jgvLW9"}},{"cell_type":"markdown","source":["Los objetos de Pandas no son sencillos, tienen propiedades asociadas, ademÃ¡s de los mÃ©todos o funciones que ya esperamos:"],"metadata":{"id":"T6c0mfHXvPn0"}},{"cell_type":"code","source":["print(chipo.columns)\n","print(chipo.index)"],"metadata":{"id":"F-KufiJ8a_vv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677170241829,"user_tz":-60,"elapsed":949,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"829452a8-7f64-467a-cd97-9fd756e93d3c"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['order_id', 'quantity', 'item_name', 'choice_description',\n","       'item_price'],\n","      dtype='object')\n","RangeIndex(start=0, stop=4622, step=1)\n"]}]},{"cell_type":"code","source":["chipo.info()"],"metadata":{"id":"WUJuPivbo5Ps","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677170399333,"user_tz":-60,"elapsed":718,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"892aa64c-5175-4db0-c78b-e2519949cbd1"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 4622 entries, 0 to 4621\n","Data columns (total 5 columns):\n"," #   Column              Non-Null Count  Dtype \n","---  ------              --------------  ----- \n"," 0   order_id            4622 non-null   int64 \n"," 1   quantity            4622 non-null   int64 \n"," 2   item_name           4622 non-null   object\n"," 3   choice_description  3376 non-null   object\n"," 4   item_price          4622 non-null   object\n","dtypes: int64(2), object(3)\n","memory usage: 180.7+ KB\n"]}]},{"cell_type":"code","source":["chipo.dtypes"],"metadata":{"id":"tvWDCiNt2f6E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677170726422,"user_tz":-60,"elapsed":1669,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"6ad3446f-3fb1-4e9f-f2ed-b8d47d29831f"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id               int64\n","quantity               int64\n","item_name             object\n","choice_description    object\n","item_price            object\n","dtype: object"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["Podemos traer una columna:"],"metadata":{"id":"zE3Yw-vNvfH0"}},{"cell_type":"code","source":["display(chipo['choice_description'])\n","type(chipo['choice_description'])"],"metadata":{"id":"YZ_bogKavkrN","colab":{"base_uri":"https://localhost:8080/","height":243},"executionInfo":{"status":"ok","timestamp":1677170786945,"user_tz":-60,"elapsed":6,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"f1b95371-96d3-4432-90ec-7e8e6c3a5a41"},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":["0                                                     NaN\n","1                                            [Clementine]\n","2                                                 [Apple]\n","3                                                     NaN\n","4       [Tomatillo-Red Chili Salsa (Hot), [Black Beans...\n","                              ...                        \n","4617    [Fresh Tomato Salsa, [Rice, Black Beans, Sour ...\n","4618    [Fresh Tomato Salsa, [Rice, Sour Cream, Cheese...\n","4619    [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...\n","4620    [Fresh Tomato Salsa, [Fajita Vegetables, Lettu...\n","4621    [Fresh Tomato Salsa, [Fajita Vegetables, Pinto...\n","Name: choice_description, Length: 4622, dtype: object"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["Y de esa columna, una de las filas"],"metadata":{"id":"bdz3jsG_vmtS"}},{"cell_type":"code","source":["chipo['choice_description'][12]"],"metadata":{"id":"LFqXcKcuJGo1","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1677171350733,"user_tz":-60,"elapsed":412,"user":{"displayName":"Alejandro Perdiguero O'Leary","userId":"11762036886765988304"}},"outputId":"42a2a670-7d40-4ae1-e5e9-7837a66cc485"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'[Roasted Chili Corn Salsa, [Rice, Black Beans, Cheese, Sour Cream]]'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["Â¿QuÃ© es una columna?"],"metadata":{"id":"-dRUSx4wvpiS"}},{"cell_type":"code","source":["type(chipo['choice_description'])"],"metadata":{"id":"20LKQyPSIryn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿PodrÃ­a traerme varias columnas?"],"metadata":{"id":"Q1meSpStvrm8"}},{"cell_type":"code","source":["chipo[ 'choice_description','item_name' ] # fÃ­jate que sÃ³lo le estoy metiendo una variable a los corchetes de chipo, Â¿de quÃ© tipo es?"],"metadata":{"id":"S6QEs5g_2w0e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[ ['choice_description','item_name'] ] # fÃ­jate que sÃ³lo le estoy metiendo una variable a los corchetes de chipo, Â¿de quÃ© tipo es?\n"],"metadata":{"id":"RFHHHsTx95bz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Existen funciones de agregaciÃ³n en Pandas!\n","TambiÃ©n condicionales\n","\n","Â¿QuÃ© estamos haciendo en la siguiente celda?"],"metadata":{"id":"KYO6flG_wGI7"}},{"cell_type":"code","source":["chipo.isnull().sum()"],"metadata":{"id":"g0BG0sRmjThQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Hemos visto la funciÃ³n display, que trata de mostrarnos la tabla entera, pero si es muy grande no lo hace...\n","\n","Â¿PodrÃ­a decirle a Pandas que sÃ³lo traiga los primeros registros o los Ãºltimos?"],"metadata":{"id":"8VppEK2AwQiE"}},{"cell_type":"code","source":["chipo.head(8) #tail"],"metadata":{"id":"IhM55JFUeaf8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Cambiar tipos de datos por columnas, \n","\n","astype()"],"metadata":{"id":"vej7BEoo0YjL"}},{"cell_type":"markdown","source":["Â¿CÃ³mo son nuestros datos?"],"metadata":{"id":"A0A9J_cRwhoA"}},{"cell_type":"code","source":["chipo.info()"],"metadata":{"id":"QWlktJ_00XrX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### MÃ©todo 1"],"metadata":{"id":"PqaovVe00z-z"}},{"cell_type":"code","source":["chipo['item_name'] = chipo['item_name'].astype('string')\n","chipo['choice_description'] = chipo['choice_description'].astype('string')"],"metadata":{"id":"4VxZjcAI0rgu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### MÃ©todo 2"],"metadata":{"id":"KI4rUexy03jn"}},{"cell_type":"code","source":["chipo = chipo.astype( {'item_name':'string', \n","                       'choice_description':'string'})"],"metadata":{"id":"Ov5Qml4_05ao"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### MÃ©todo 3"],"metadata":{"id":"YXRzG5EZwqBq"}},{"cell_type":"code","source":["chipo[ ['choice_description','item_name'] ] = chipo[ ['choice_description','item_name'] ].astype('string')"],"metadata":{"id":"KSElTvej1CE7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Comprobamos \n","**Siempre** despuÃ©s de cada modificaciÃ³n que hemos cambiado lo que querÃ­amos"],"metadata":{"id":"YtOCtF1Xwtqe"}},{"cell_type":"code","source":["chipo.info()"],"metadata":{"id":"TV6bsUTK2IKC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Sacar info sencilla\n","* InformaciÃ³n agregada\n","* Seleccionar columnas\n","* Seleccionar filas especÃ­ficas\n","* ..."],"metadata":{"id":"nl-QBds4QZRF"}},{"cell_type":"code","source":["chipo"],"metadata":{"id":"vXxkBLZZAC85"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Para sacar info por columnas\n","**Â¿puedo pasarle una variable, de quÃ© tipos puede ser?**"],"metadata":{"id":"cq4OMIzJ-YIP"}},{"cell_type":"code","source":["var = 'quantity'\n","\n","var = ['choice_description', 'quantity', 'item_name']\n","\n","chipo[ var ]\n"],"metadata":{"id":"vcFoicL50BOr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿El orden en que aparecen las columnas viene dado por el orden en la tabla?"],"metadata":{"id":"h_-Lh5J--kFe"}},{"cell_type":"code","source":["lista_cols = ['choice_description', 'quantity']\n","chipo[lista_cols]"],"metadata":{"id":"s0shQiXJxH0n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[ ['choice_description', 'item_name', 'quantity'] ]"],"metadata":{"id":"gRB6VqCQ0F2y"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Â¿Puedo coger subconjuntos de filas y columnas de mi tabla?"],"metadata":{"id":"4ymXfLGY-gu5"}},{"cell_type":"code","source":["chipo.iloc[0:6, :2]"],"metadata":{"id":"KNc8CNFy6FMF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Filtrar por filas, empezar a hacerle preguntas a los datos"],"metadata":{"id":"2Rzl9n5IFh03"}},{"cell_type":"code","source":["chipo.sum()"],"metadata":{"id":"eKwjjcgR_PXm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.isnull().sum()"],"metadata":{"id":"N4CSQmEm8S-Z"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿QuÃ© me devuelve una comparaciÃ³n entre dos variables sencillas?\n","\n","Â¿Y si comparo una variable mÃ¡s compleja contra una sencilla?"],"metadata":{"id":"o5KEwvCJFYfp"}},{"cell_type":"code","source":["print('6 > 1', 6 > 1)\n","\n","print(chipo['quantity'])\n","print(chipo['quantity'] > 1)\n"],"metadata":{"id":"8aXKYOFqfsXZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo['quantity'] > 1"],"metadata":{"id":"4N1XNjLrh48I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["variable = chipo['quantity'] > 5\n","type(variable)\n","\n","\n","chipo[ variable ] # chipo[ chipo['quantity'] > 1 ] \n"],"metadata":{"id":"4SU6c9H7gNZP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[\"choice_description\"].notnull()"],"metadata":{"id":"LLufNES81MfH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[ chipo[\"choice_description\"].notnull() ]"],"metadata":{"id":"wrag02-n9DZ0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["filtro = chipo['item_name'] == 'Chips and Guacamole'\n","print(type(filtro))\n","print(filtro)\n"],"metadata":{"id":"jY3chabz2TnB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","chipo[filtro]\n"],"metadata":{"id":"DdLFRgsej1tD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Le podemos pedir a Pandas que nos describa los datos\n","\n","Utilizaremos la funciÃ³n .describe() sobre una columna\n","\n","Â¿Y si la utilizo sobre la tabla entera?"],"metadata":{"id":"Cruel41iFrfm"}},{"cell_type":"code","source":["serieOrderId = chipo['order_id'].describe()\n","print(serieOrderId)\n","type(serieOrderId)"],"metadata":{"id":"dfeLFZof3OBd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(serieOrderId['75%'])\n","print(serieOrderId['25%'])\n"],"metadata":{"id":"wnNWNWnGkSeX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**No siempre tiene sentido ponernos a hacer medias y estudios sobre todas las columnas numÃ©ricas.**\n","\n","Â¿Por quÃ© puede no tener sentido?"],"metadata":{"id":"Pc6OjZG0GHJ9"}},{"cell_type":"code","source":["serieQuantity=chipo['quantity'].describe()\n","print(serieQuantity)\n","type(serieQuantity)\n"],"metadata":{"id":"NJzWKaCtkyTM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Definimos el IQR de una columna especÃ­fica"],"metadata":{"id":"4t2FKWpOF895"}},{"cell_type":"code","source":["iqr = serieQuantity['75%'] - serieQuantity[\"25%\"]\n","print(iqr)"],"metadata":{"id":"2QpNKdw_n4L-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿QuÃ© estamos calculando aquÃ­?"],"metadata":{"id":"qdnbaatvGV5E"}},{"cell_type":"code","source":["\n","maxx = serieQuantity[\"75%\"]+1.5*iqr # Q3+ 1.5IQR\n","print(maxx)\n","minn = serieQuantity[\"25%\"]-1.5*iqr\n","print(minn) # bigote inferior\n"],"metadata":{"id":"8mg_hFZqoFTq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Comprobamos si hay outliers por debajo del mÃ­nimo calculado"],"metadata":{"id":"QYWA-T5CGZVD"}},{"cell_type":"code","source":["filtro1 = chipo['quantity'] < minn\n","filtro1"],"metadata":{"id":"lxA6yIkVQtqy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[filtro1]"],"metadata":{"id":"hZegw3I9oYUo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Comprobamos si hay outliers por encima del mÃ¡ximo calculado"],"metadata":{"id":"ghFlbEVHGb8Y"}},{"cell_type":"code","source":["filtro2 = chipo['quantity'] > maxx # valores que estÃ¡n por encima del bigote superior\n","filtro2"],"metadata":{"id":"Q0G8uLCRouXd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[filtro2]"],"metadata":{"id":"1WUARDseo8Sa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo"],"metadata":{"id":"tij-StZW9HIw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.describe()\n"],"metadata":{"id":"1T5N4JV88itR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.describe()[4:5]"],"metadata":{"id":"GyJXianc9PTa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(chipo.describe().loc['25%'])\n","Q1 = chipo.describe().loc['25%']\n","print(chipo.describe().loc['75%'])\n","Q3 = chipo.describe().loc['75%']\n","print(chipo.describe().loc['75%'] - chipo.describe().loc['25%'])\n","IQR = chipo.describe().loc['75%'] - chipo.describe().loc['25%']"],"metadata":{"id":"ojSFDQrS9uLL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["IQR\n","MIN = Q1-1.5*IQR\n","MAX = Q3+1.5*IQR\n","print(MIN)\n","print(MAX)"],"metadata":{"id":"X3O9Uc8l_SjY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[ chipo['quantity'] > 1]"],"metadata":{"id":"Pq-ASCro_13e"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Limpieza de los datos"],"metadata":{"id":"aCJdIwjxpF_p"}},{"cell_type":"markdown","source":["### Cargarnos datos nulos"],"metadata":{"id":"TjwVa6e3HTKd"}},{"cell_type":"code","source":["chipo.dropna() #26-27 %"],"metadata":{"id":"86Ulx3AgBJDD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Reemplazar cosas y tal y cual"],"metadata":{"id":"ewGn0rKpGyQm"}},{"cell_type":"markdown","source":["Recordamos cÃ³mo utilizamos la funciÃ³n replace"],"metadata":{"id":"XWIONzKWGpeD"}},{"cell_type":"code","source":["dolar = ' $17.50'\n","dolar = dolar.replace('Â¥', '')\n","dolar = dolar.replace('$', '')\n","dolar = dolar.replace('â‚¬', '')\n","#dolar = dolar[1:]\n","print(dolar)"],"metadata":{"id":"EFvr7go-pfZC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# chipo['item_price']\n","chipo.item_price"],"metadata":{"id":"K0WThJXbqMqX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.item_price.describe() "],"metadata":{"id":"QmeHDXn7rDA_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["float('$8.75 '.replace('$', '').replace(' ', ''))\n","float('$8.75 '[1:-1])"],"metadata":{"id":"iFsPsXkbFRmG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.item_price[1:-1]\n","chipo['item_price'][765:]\n"],"metadata":{"id":"4GN-UdVT6cg_"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿Funciona replace como esperamos aquÃ­?"],"metadata":{"id":"8knZ5EFlsXwc"}},{"cell_type":"code","source":["chipo.item_price.replace('$2.39 ', '')"],"metadata":{"id":"6QZFcOqLry8J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["***pero entonces cÃ³mo hago que funcione!?!?!?!?!?!***"],"metadata":{"id":"x9ZFRvxIdOJx"}},{"cell_type":"code","source":["chipo.item_price.str.replace('$', '').astype('float')"],"metadata":{"id":"MwpcebrksdDa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo"],"metadata":{"id":"fQozGNcutqyP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","chipo.item_price = chipo.item_price.str.replace('$', '').astype('float')"],"metadata":{"id":"p9mIvrUHriXj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","chipo.item_price.describe()"],"metadata":{"id":"YB3iGAGQ8AOL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Una vez limpios los datos, podemos ponernos a jugar con ellos!"],"metadata":{"id":"LDdvvxRvZbca"}},{"cell_type":"code","source":["chipo.item_price.describe()"],"metadata":{"id":"-Toy5j_Ibnvx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["serieItemPrice=chipo['item_price'].describe()\n","print(serieItemPrice)\n","type(serieItemPrice)\n"],"metadata":{"id":"serUoxwKbwp4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["q1 = serieItemPrice['25%']\n","q3 = serieItemPrice['75%']\n","iqr = q3-q1\n"],"metadata":{"id":"Q-EQa9KPb426"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Ahora calculamos 'mÃ¡ximo' y 'mÃ­nimo' de nuestra distribuciÃ³n"],"metadata":{"id":"cwB4ltQWcP6I"}},{"cell_type":"code","source":["maximoPrice = q3 + 1.5*iqr\n","minimoPrice = q1 - 1.5*iqr\n","\n","print('El mÃ¡ximo de nuestra distribuciÃ³n es', maximoPrice)\n","print('El mÃ­nimo de nuestra distribuciÃ³n es', minimoPrice)"],"metadata":{"id":"myYozYUpcVfj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Aplicamos los filtros para ver si hay algÃºn outlier"],"metadata":{"id":"wuwqYUuUchGR"}},{"cell_type":"code","source":["filtroMax = chipo['item_price'] > maximoPrice\n","filtroMin = chipo['item_price'] < minimoPrice\n","\n","display(chipo[filtroMax])\n","display(chipo[filtroMin])"],"metadata":{"id":"71uiUFWecgsq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Observamos que tenemos muchos valores por encima del mÃ¡ximo (*1147*) y otros tantos por debajo del mÃ­nimo (*1117*) \n","\n","**Â¿QuÃ© puede estar pasando?**\n","\n","**Â¿QuÃ© hemos estado suponiendo en todo momento?**\n","\n"],"metadata":{"id":"z_Ac2YKYdDZ8"}},{"cell_type":"markdown","source":["## Echarle un vistazo a los datos modificados\n","\n","\n","> Vemos quÃ© pinta tienen los datos...\n","\n"],"metadata":{"id":"0_HtORpj68JY"}},{"cell_type":"markdown","source":["### Podemos hacer grÃ¡ficas de nuestros datos?"],"metadata":{"id":"Zzk7pRfQdlmy"}},{"cell_type":"markdown","source":["GrÃ¡ficas de pandas, Ãºtiles y rÃ¡pidas, poco interactivas"],"metadata":{"id":"qdy4FbCTdulB"}},{"cell_type":"code","source":["chipo['item_price'].plot(kind='box')"],"metadata":{"id":"8SwbLdBDH0J0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["GrÃ¡ficas de Plotly, un poco mejores"],"metadata":{"id":"SgiK6AfUdzKh"}},{"cell_type":"code","source":["import plotly.express as px # aquÃ­ nos estamos trayendo una librerÃ­a, dÃ³nde tenemos que poner este import???????\n","\n","px.box(chipo, y = 'item_price')"],"metadata":{"id":"8gQGNkkgIWtx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Fijaos en una cosa, podemos ver las etiquetas de cada parte del diagrama de cajas y bigotes**\n","\n","**Â¿Nos indican los mismos valores para los bigotes superior e inferior?**\n","\n","**Â¿Por quÃ© pasa esto?**"],"metadata":{"id":"3-EiyDC4d3ki"}},{"cell_type":"markdown","source":["Â¿Y si le metemos mÃ¡s cosas a la funciÃ³n .box() de plotly.express?"],"metadata":{"id":"4pRVHSMoeVV_"}},{"cell_type":"code","source":["px.box(chipo, x= 'quantity', y = 'item_price')"],"metadata":{"id":"SOxesod0eUUf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#px.histogram(chipo, x = 'item_price')\n","px.histogram(chipo, x = ['item_price', 'quantity'])\n"],"metadata":{"id":"3FGcJW90IzuS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Â¿CuÃ¡ntos datos hemos perdido?**"],"metadata":{"id":"QvpVW88FejqY"}},{"cell_type":"markdown","source":["### Utilizar funciones de agregaciÃ³n"],"metadata":{"id":"wQzMXlOAHfFK"}},{"cell_type":"code","source":["chipo['item_name'].value_counts() # indsicxes uy tal"],"metadata":{"id":"0xXCntcuEnJE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["orders = chipo.order_id.value_counts().count()\n","orders"],"metadata":{"id":"z7oy8h5w8crw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.columns"],"metadata":{"id":"diYw2nDSJZOb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Renombrar columnas?"],"metadata":{"id":"o1b58IRG_8oh"}},{"cell_type":"markdown","source":["### OpciÃ³n 1"],"metadata":{"id":"57Ftd7YNutQd"}},{"cell_type":"code","source":["display(chipo.head())\n","\n","chipo = chipo.rename(columns={'quantity':'cantidah', \n","                              'item_price':'cohte'})\n","display(chipo.head())"],"metadata":{"id":"3BZLhq87ISRi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### OpciÃ³n 2"],"metadata":{"id":"qcqMS5Dvurpi"}},{"cell_type":"code","source":["chipo.info()\n","\n","chipo.columns = ['id_pedido', 'cantidah', 'produtto', 'inform', 'cohte']\n","\n","chipo.head()"],"metadata":{"id":"6sAdkdNwHtfq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo['choice_description']"],"metadata":{"id":"8JOJGfD9Wk9X"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.info()"],"metadata":{"id":"XFopP92vfUt1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Â¿CÃ³mo puedo seleccionar columnas renombradas?"],"metadata":{"id":"u5kMwQL8GuHy"}},{"cell_type":"code","source":["\n","chipo = chipo.rename(columns = {'id_pedido':'Numero Pedido'})\n","\n","display(chipo)"],"metadata":{"id":"hqYlu-Dqqsl-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.id_pedido\n"],"metadata":{"id":"OOYLRw7tqviS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Funciones especÃ­ficas para aplicar por registro\n","\n","> No siempre nos servirÃ¡n los filtros, o quizÃ¡ queramos una funciÃ³n especÃ­fica"],"metadata":{"id":"VK434k1Aq-nL"}},{"cell_type":"code","source":["ruta = '/content/drive/MyDrive/csv/chipotle.tsv'\n","\n","chipo2 = pd.read_csv(ruta , sep = '\\t')"],"metadata":{"id":"0nHwt70xuWb9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo2['item_price'][0]"],"metadata":{"id":"KCPJ6IlrEtDC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dollarizer = lambda x: float(x[1:-1])\n","chipo2.item_price = chipo2.item_price.apply(dollarizer)"],"metadata":{"id":"uZgTIGiyNcB4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["display(chipo2)"],"metadata":{"id":"dHc4wvreCTZc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo2[chipo2['quantity']>1]"],"metadata":{"id":"c3_EPEdL5FbZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Group by"],"metadata":{"id":"JAPXCQy8d24T"}},{"cell_type":"markdown","source":["Vamos a jugar con el dataframe que tenÃ­amos antes:"],"metadata":{"id":"eUBPYIovgjRa"}},{"cell_type":"code","source":["chipo.head()"],"metadata":{"id":"3dSH6iubgSSS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo[['Numero Pedido', 'cohte']].groupby(by=['Numero Pedido']).mean()\n"],"metadata":{"id":"N_2GzqjixplM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Â¿Tiene sentido esta agrupaciÃ³n?**"],"metadata":{"id":"4zXG-CxDg0gF"}},{"cell_type":"code","source":["chipo[['cantidah', 'cohte']].groupby(by=['cantidah']).mean()\n"],"metadata":{"id":"61a5DY8cg0Em"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.head()"],"metadata":{"id":"7Tzc5FvoB7RZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo.groupby(by=['cantidah']).mean()#['cohte']"],"metadata":{"id":"iPNRoIZWBewt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Columnas a partir de otras"],"metadata":{"id":"4_xKxz3Xd7bD"}},{"cell_type":"code","source":["chipo2.tail()"],"metadata":{"id":"pZBkp2ZcyEmL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Crear columnas a partir de dos"],"metadata":{"id":"iQoG-8zFAFMY"}},{"cell_type":"code","source":["chipo2['totalRevenue'] = chipo2['quantity'] * chipo2['item_price']"],"metadata":{"id":"EclvbF-E-11R"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["chipo2.head()"],"metadata":{"id":"PMYv-JSf9_Dv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Â¡Vamos a por mÃ¡s! Ejemplo con JSON para filtrado.."],"metadata":{"id":"mGJcqArNCP7x"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"VKCTWuEWCPfB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create an example dataframe about a fictional army\n","raw_data = {'regiment': ['Nighthawks', 'Nighthawks', 'Nighthawks', 'Nighthawks', 'Dragoons', 'Dragoons', 'Dragoons', 'Dragoons', 'Scouts', 'Scouts', 'Scouts', 'Scouts'],\n","            'company': ['1st', '1st', '2nd', '2nd', '1st', '1st', '2nd', '2nd','1st', '1st', '2nd', '2nd'],\n","            'deaths': [523, 52, 25, 616, 43, 234, 523, 62, 62, 73, 37, 35],\n","            'battles': [5, 42, 2, 2, 4, 7, 8, 3, 4, 7, 8, 9],\n","            'size': [1045, 957, 1099, 1400, 1592, 1006, 987, 849, 973, 1005, 1099, 1523],\n","            'veterans': [1, 5, 62, 26, 73, 37, 949, 48, 48, 435, 63, 345],\n","            'readiness': [1, 2, 3, 3, 2, 1, 2, 3, 2, 1, 2, 3],\n","            'armored': [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1],\n","            'deserters': [4, 24, 31, 2, 3, 4, 24, 31, 2, 3, 2, 3],\n","            'origin': ['Arizona', 'California', 'Texas', 'Florida', 'Maine', 'Iowa', 'Alaska', 'Washington', 'Oregon', 'Wyoming', 'Louisana', 'Georgia']}"],"metadata":{"id":"NNDuVf7af5_n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army = pd.DataFrame(data=raw_data)\n","army"],"metadata":{"id":"beQQZAGef_Kp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army.regiment"],"metadata":{"id":"tAxIq4OHgCkH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army[[\"veterans\", \"deaths\"]]"],"metadata":{"id":"-L_AWCqUgD6x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army.columns"],"metadata":{"id":"f8GHPn7ZgFyL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army.iloc[1:8, 3:5] "],"metadata":{"id":"ZAV-OyptgKAu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army.iloc[4:, :]"],"metadata":{"id":"2oJHWCXFgK6b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["army[army[\"deaths\"] > 50]"],"metadata":{"id":"ux3J7D6YgOoC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data Wrangling...\n","\n"],"metadata":{"id":"YcBQ6EIL4RKz"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import datetime"],"metadata":{"id":"jeoV_FYr39gT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","data = pd.read_csv('wind.data', sep = \"\\s+\", parse_dates = [[0,1,2]]) \n","data.head(9)"],"metadata":{"id":"JZeCCz7X4X5I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fechas > 2061Â¿Â¿Â¿Â¿Â¿...\n","\n","# Funciones de corregir columnas...\n","def fix_century(x):\n","  year = x.year - 100 if x.year > 1989 else x.year\n","  return datetime.date(year, x.month, x.day)\n","\n","# Otro apply :D\n","data['Yr_Mo_Dy'] = data['Yr_Mo_Dy'].apply(fix_century)\n","\n","# data.info()\n","data.head()"],"metadata":{"id":"bA6TggT94cIn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Transformamos Yr_Mo_Dy a tipo de datos fecha= datetime64\n","data[\"Yr_Mo_Dy\"] = pd.to_datetime(data[\"Yr_Mo_Dy\"])\n","\n","#  'Yr_Mo_Dy' Cimo indice...\n","data = data.set_index('Yr_Mo_Dy')\n","\n","data.head()\n","# data.info()"],"metadata":{"id":"IyH13Ucy4fHR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xcJpzclyRh4N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Cuantos valores  nulos hay?\n","data.isnull().sum()"],"metadata":{"id":"606S7opt4hgp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.notnull().sum()"],"metadata":{"id":"cyy8Feyw4li5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Â¿QuÃ© estamos haciendo aquÃ­?"],"metadata":{"id":"-qclsuBsjohb"}},{"cell_type":"code","source":["data.loc[data.index.month == 3].mean()\n"],"metadata":{"id":"-4dIMS3tEDh-"},"execution_count":null,"outputs":[]}]}